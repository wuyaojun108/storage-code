1. 项目架构：
   前端：html、css、js
      首页、登录、注册、管理员页面、订单页面、从每个页面中提取出的公共部分（分页模块、页脚）
   后端：Java代码
      web层：一个模块一个servlet
         UserServlet：用户模块，注册、登录、注销
         CartServlet：购物车模块，增删改查
         ManagerServlet：管理员模块，编辑图书
         OrderServlet：订单模块，支付
      service层：
         BookService：处理关于图书的请求
            对于图书的增删改查和分页功能
         UserService：处理关于用户的请求
            login：处理登录请求
            registerUser：处理注册请求
            existsUsername：判断指定的用户名在数据库中是否存在
      dao层：
         BookDao：处理关于图书的请求。
            addBook：添加图书
            queryBookById：根据ID查找图书
            queryBooks：返回所有图书
            updateBook：修改图书信息
            deleteBook：根据ID删除图书
            queryForPageTotalCount：查询总记录数
            queryForPageItems：查询某一页的图书信息
            queryForPageByPriceTotalCount：查询价格区间内的总记录数
            queryForPageByPriceItems：返回价格区间内的图书信息
         OrderDao：处理关于购物车的请求
            saveOrder：保存订单信息
         OrderItemDao：处理关于购物车的请求
            saveOrderItem：保存订单项
         UserDao：处理关于用户的请求
            getUserByUsername：根据用户名来获取用户信息
            getUserByUsernameAndPassword：根据用户名和密码来获取用户信息
            saveUser：把User对象中的数据保存到数据库中
      beans：实体类
         Book：图书实体类。属性：id(图书编码)、name(图书名称)、author(作者)、price(单价)、sales(销量)、stock(库存)、imgPath(图书封面的位置信息)
         Cart：购物车对象。
            属性：items(购物车中每一个商品项的集合)。
            方法：
               getTotalCount：获取购物车中商品的总数量
               getTotalPrice：获取购物车中商品的总金额
               getItems：返回购物车中商品项的集合
               addItem：向购物车中添加商品
               deleteItem：删除购物车中的商品项
               clearCart：清空购物车
               updateCount：修改购物车中某件商品的数量
         CartItem：购物车中的每一个商品项。属性：id(商品ID)、name(商品名称)、price(商品单价)、count(商品数量)、totalPrice(总价)
         Order：订单，用户的某个订单。属性：orderId(订单编码)、createTime(创建时间)、price(单价)、status(订单状态)、userId(用户编码)
         OrderItem：订单项。
         Page：存储分页数据。属性：pageNo(当前页码)、pageTotal(总页码)、pageSize(每页显示数量)、pageTotalCount(页面数量)、items(当前页面的数据)、uriPart(为了将分页条模块抽取出来，不同模块在引入分页条的时候需要设置自己独有的uri地址)
         User：用户实体类。属性：id、username、password、email，
      utils：工具类
         JDBCUtils：处理数据库的连接
            静态代码块：在静态代码块中初始化DataSource对象，使用数据库连接池 druid，读取druid.properties配置文件，配置文件中有用户名、密码等配置信息。
            getConnection：获取数据库中的连接
            close：关闭数据库连接
   mysql：
      bookStore数据库：存储书城项目相关的表
1. 模块：
   首页模块：分页功能
   用户模块：注册、登录、退出登录
   购物车模块：购物车的增删改查
   订单模块：结账，查看订单详情，查看订单项
   管理员模块：增删改查、上传图片
      图书管理：增删改查
      订单管理：查询订单、查询订单项（以管理员的视角而不是用户的视角）

2. 功能实现：
   1. 分页功能：
   2. 日志功能：

