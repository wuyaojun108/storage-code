/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2022-03-28 06:26:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/pages/common/footer.jsp", Long.valueOf(1644592435472L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<base href=\"/book-store/\"></base>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>尚硅谷会员注册页面</title>\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"static/css/style.css\" >\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("    \t.login_form{\r\n");
      out.write("    \t\theight: 420px;\r\n");
      out.write("    \t\tmargin-top: 25px;\r\n");
      out.write("    \t}\r\n");
      out.write("    </style>\r\n");
      out.write("\t<script src=\"static/scripts/jquery-3.6.0.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t    // 判断用户名是否存在于数据库中\r\n");
      out.write("\t\t\t$(\"#username\").blur(function(){\r\n");
      out.write("\t\t\t    var username = this.value;\r\n");
      out.write("\t\t\t    $.get({\r\n");
      out.write("\t\t\t        url: \"/book-store/user?action=isUsernameExists\",\r\n");
      out.write("\t\t\t        data: \"action=isUsernameExists&username=\" + username,\r\n");
      out.write("\t\t\t        success: function(msg){\r\n");
      out.write("\t\t\t            if(msg == \"用户名已存在\"){\r\n");
      out.write("\t\t\t                $(\"#input_prompt\").css(\"visibility\", \"visible\")\r\n");
      out.write("\t\t\t                $(\"#input_prompt\").text(\"用户名已存在，请重新输入\")\r\n");
      out.write("\t\t\t            } else {\r\n");
      out.write("\t\t\t                $(\"#input_prompt\").css(\"visibility\", \"hidden\")\r\n");
      out.write("\t\t\t            }\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        dataType: \"text\"\r\n");
      out.write("\t\t\t    })\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 点击提交时校验：\r\n");
      out.write("\t\t\t// 1，用户名和密码是否符合规范；\r\n");
      out.write("\t\t\t// 2：两次输入的密码是否一致；\r\n");
      out.write("\t\t\t// 3，校验邮箱名称是否符合规范\r\n");
      out.write("\t\t\t// 4，校验用户输入的验证码是否为空\r\n");
      out.write("\t\t    $(\"#sub_btn\").click(function(){\r\n");
      out.write("\t\t        // 获取用户的输入\r\n");
      out.write("\t\t        var usernameText = $(\"#username\").val()\r\n");
      out.write("\t\t\t    var passwordText = $(\"#password\").val()\r\n");
      out.write("\t\t\t    var repwdText = $(\"#repwd\").val()\r\n");
      out.write("\t\t\t    var emailText = $(\"#email\").val()\r\n");
      out.write("\t\t\t    var codeText = $(\"#code\").val()\r\n");
      out.write("\t\t        // 校验用户名的正则表达式，可以包含中文和英文字母，长度在2到12位之间\r\n");
      out.write("\t\t\t    var usernamePat = /[\\u4e00-\\u9fa5\\w]{2,12}/\r\n");
      out.write("\t\t\t    // 校验密码的正则表达式：强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)\r\n");
      out.write("\t\t\t    // (?=字符)：位置匹配，正向肯定预查，匹配pattern之前的位置，在最终结果中不包含pattern\r\n");
      out.write("\t\t\t    var passwordPat = /^(?=.*[\\d])(?=.*[a-z])(?=.*[A-Z])(?=.*[^\\w]).{8,16}$/\r\n");
      out.write("\t\t\t    // 校验邮箱的正则表达式，有些有些@符号之前可能有“.”\r\n");
      out.write("\t\t\t    var emailPat = /[\\w]+(\\.[\\w]+)*@[\\w]+(\\.[\\w])+/\r\n");
      out.write("\r\n");
      out.write("                $(\"#input_prompt\").css(\"visibility\", \"visible\")\r\n");
      out.write("                if(usernameText == \"\" || passwordText == \"\" || repwdText == \"\" || emailText == \"\"\r\n");
      out.write("                    || codeText == \"\"){\r\n");
      out.write("                    $(\"#input_prompt\").html(\"有必填项没有填<br/>\")\r\n");
      out.write("                } else if (!usernamePat.test(usernameText)){\r\n");
      out.write("                    $(\"#input_prompt\").html(\"用户名可以使用中文和英文字母，必须2到12位<br/>\")\r\n");
      out.write("\t\t\t    } else if(!passwordPat.test(passwordText)){\r\n");
      out.write("                    $(\"#input_prompt\").html(\"密码必须包含英文大小写和特殊字符<br/>\")\r\n");
      out.write("\t\t\t    } else if(repwdText != passwordText){\r\n");
      out.write("                    $(\"#input_prompt\").html(\"两次输入的密码必须一致<br/>\")\r\n");
      out.write("\t\t\t    } else if(!emailPat.test(emailText)){\r\n");
      out.write("                    $(\"#input_prompt\").html(\"邮箱名不符合规范<br/>\")\r\n");
      out.write("\t\t\t    } else if(codeText == \"\"){\r\n");
      out.write("                    $(\"#input_prompt\").html(\"请输入验证码<br/>\")\r\n");
      out.write("\t\t\t    } else{\r\n");
      out.write("\t\t\t        $(\"#input_prompt\").css(\"visibility\", \"hidden\")\r\n");
      out.write("                    // 使用ajax向后台发送请求\r\n");
      out.write("                    var form_data = $(\"#register_form\").serialize()\r\n");
      out.write("                    $.get({\r\n");
      out.write("                        url: \"/book-store/user?action=register\",\r\n");
      out.write("                        data: form_data,\r\n");
      out.write("                        success: function(msg){\r\n");
      out.write("                            $(\"#input_prompt\").css(\"visibility\", \"visible\")\r\n");
      out.write("                            $(\"#input_prompt\").text(msg)\r\n");
      out.write("                        },\r\n");
      out.write("                        dataType: \"text\"\r\n");
      out.write("                    })\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t    })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t    // 为验证码图片绑定单击事件，点击切换验证码\r\n");
      out.write("\t\t    $(\"#img_code\").click(function(){\r\n");
      out.write("\t\t        // 为了防止浏览器因为缓存而不去访问服务器，在每个请求之后都拼接一个日期字符串\r\n");
      out.write("\t\t        this.src = \"/book-store/verification_code.jpg?date=\" + new Date()\r\n");
      out.write("\t\t    })\r\n");
      out.write("\t\t})\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"login_header\">\r\n");
      out.write("\t\t<img class=\"logo_img\" alt=\"\" src=\"static/img/logo.gif\" >\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"login_banner\">\r\n");
      out.write("\t\t<div id=\"l_content\">\r\n");
      out.write("\t\t\t<span class=\"login_word\">欢迎注册</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"content\">\r\n");
      out.write("\t\t\t<div class=\"login_form\">\r\n");
      out.write("\t\t\t\t<div class=\"login_box\">\r\n");
      out.write("\t\t\t\t\t<div class=\"tit\">\r\n");
      out.write("\t\t\t\t\t\t<h1>注册尚硅谷会员</h1>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"pages/user/login.jsp\">立即登录</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form\">\r\n");
      out.write("\t\t\t\t\t\t<form action=\"/book-store/register\" method=\"post\" id=\"register_form\">\r\n");
      out.write("\t\t\t\t\t\t\t<label>用户名称：</label>\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"itxt\" type=\"text\" placeholder=\"请输入用户名\"\r\n");
      out.write("\t\t\t\t\t\t\t\t   autocomplete=\"off\"  name=\"username\" id=\"username\"/>\r\n");
      out.write("\t\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t\t<label>用户密码：</label>\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"itxt\" type=\"password\" placeholder=\"请输入密码\"\r\n");
      out.write("\t\t\t\t\t\t\t\t   autocomplete=\"off\"  name=\"password\" id=\"password\" />\r\n");
      out.write("\t\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t\t<label>确认密码：</label>\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"itxt\" type=\"password\" placeholder=\"确认密码\"\r\n");
      out.write("\t\t\t\t\t\t\t\t   autocomplete=\"off\"  id=\"repwd\" />\r\n");
      out.write("\t\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t\t<label>电子邮件：</label>\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"itxt\" type=\"text\" placeholder=\"请输入邮箱地址\"\r\n");
      out.write("\t\t\t\t\t\t\t\t   autocomplete=\"off\"  name=\"email\" id=\"email\"/>\r\n");
      out.write("\t\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t\t<label>验证码：</label>\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"itxt\" type=\"text\" style=\"width: 100px;\"\r\n");
      out.write("\t\t\t\t\t\t\t\t   id=\"code\" name=\"code\"/>\r\n");
      out.write("\t\t\t\t\t\t\t<img id=\"img_code\" alt=\"\" src=\"/book-store/verification_code.jpg\"\r\n");
      out.write("\t\t\t\t\t\t\t\t style=\"float: right; margin-right: 40px; width: 130px\">\r\n");
      out.write("\t\t\t\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t\t\t\t<span style=\"color:red\" id=\"input_prompt\"><br/></span>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t<button id=\"sub_btn\">注册</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\t<div id=\"bottom\">\r\n");
      out.write("\t\t<span>\r\n");
      out.write("\t\t\t尚硅谷书城.Copyright &copy;2015\r\n");
      out.write("\t\t</span>\r\n");
      out.write("\t</div>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
